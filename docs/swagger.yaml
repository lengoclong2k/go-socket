basePath: /v1
definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Swagger for API Chat app.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User Service
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log in a user with the provided credentials
      parameters:
      - description: Login request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Login failed
          schema:
            additionalProperties: true
            type: object
      summary: Authenticate a user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh token request data
        in: body
        name: request
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Refresh token successful
          schema:
            additionalProperties: true
            type: object
      summary: Get Access Token from Refresh Token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: Register request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Registration failed
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - auth
schemes:
- http
- https
swagger: "2.0"
